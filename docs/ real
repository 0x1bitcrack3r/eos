# group `real` 

Real number data type with basic operators. Wrap double class of Math C API.

Example: 
```cpp
real a(100);
real b(10);
real c = a+b
real d = a / b
real e = a*b
if(a == b) {}
if(a > b) {}
if(a < b) {}
auto val = d.value();
```

## Summary

 Members                        | Descriptions                                
--------------------------------|---------------------------------------------
`public bool `[`operator==`](#group__real_1ga2880b7e268a82817fa784ddb1eb1b0dc)`(const real & c1,const real & c2)`            | Compares two double variables c1 and c2.
`public bool `[`operator>`](#group__real_1ga9ed6283fa49bfcbc7b0e647bdc1fb40e)`(const real & c1,const real & c2)`            | Compares two double variables c1 and c2.
`public bool `[`operator<`](#group__real_1gafb6d45ce401771fd1a03f0f2a03d4726)`(const real & c1,const real & c2)`            | Compares two double variables c1 and c2.
`public real `[`operator+`](#group__real_1ga68cd8e0f235479aba3ac8d2079172c25)`(const real & rhs) const`            | Add two real variables.
`public real `[`operator*`](#group__real_1ga6c5c07225c48b3dce21538f62d7be277)`(const real & rhs) const`            | Multiply two real variables.
`public real `[`operator/`](#group__real_1ga064fdac1b4799429680ff50ebf690d38)`(const real & rhs) const`            | Division between two real variables.
`class `[`eosio::real`](docs/ real#classeosio_1_1real) | 

## Members

#### `public bool `[`operator==`](#group__real_1ga2880b7e268a82817fa784ddb1eb1b0dc)`(const real & c1,const real & c2)` 

Compares two double variables c1 and c2.

Compares two double variables c1 and c2 
#### Returns
if c1 == c2, return true, otherwise false

#### `public bool `[`operator>`](#group__real_1ga9ed6283fa49bfcbc7b0e647bdc1fb40e)`(const real & c1,const real & c2)` 

Compares two double variables c1 and c2.

Compares two double variables c1 and c2 
#### Returns
if c1 > c2, return true, otherwise false

#### `public bool `[`operator<`](#group__real_1gafb6d45ce401771fd1a03f0f2a03d4726)`(const real & c1,const real & c2)` 

Compares two double variables c1 and c2.

Compares two double variables c1 and c2 
#### Returns
if c1 < c2, return true, otherwise false

#### `public real `[`operator+`](#group__real_1ga68cd8e0f235479aba3ac8d2079172c25)`(const real & rhs) const` 

Add two real variables.

Add two real variables 
#### Parameters
* `rhs` double variable to be added with this 

#### Returns
the sum of this and rhs

#### `public real `[`operator*`](#group__real_1ga6c5c07225c48b3dce21538f62d7be277)`(const real & rhs) const` 

Multiply two real variables.

Multiply two real variables 
#### Parameters
* `rhs` double variable to be multiplied with this 

#### Returns
the result after multiplication

#### `public real `[`operator/`](#group__real_1ga064fdac1b4799429680ff50ebf690d38)`(const real & rhs) const` 

Division between two real variables.

Division between two real variables 
#### Parameters
* `rhs` double variable to be multiplied with this 

#### Returns
the result after division

# class `eosio::real` 

## Summary

 Members                        | Descriptions                                
--------------------------------|---------------------------------------------
`public inline  `[`real`](#classeosio_1_1real_1a59e7fabdebbbb952094c2776a160caa8)`(const uint64_t & _val)` | Constructor to double object from uint64 value.
`public inline uint64_t `[`value`](#classeosio_1_1real_1a2ac76513d4a474fde9ae10f4c4b06af2)`() const` | 
`public `[`real`](#classeosio_1_1real)` `[`operator+`](#group__real_1ga68cd8e0f235479aba3ac8d2079172c25)`(const `[`real`](#classeosio_1_1real)` & rhs) const` | Add two real variables.
`public `[`real`](#classeosio_1_1real)` `[`operator*`](#group__real_1ga6c5c07225c48b3dce21538f62d7be277)`(const `[`real`](#classeosio_1_1real)` & rhs) const` | Multiply two real variables.
`public `[`real`](#classeosio_1_1real)` `[`operator/`](#group__real_1ga064fdac1b4799429680ff50ebf690d38)`(const `[`real`](#classeosio_1_1real)` & rhs) const` | Division between two real variables.

## Members

#### `public inline  `[`real`](#classeosio_1_1real_1a59e7fabdebbbb952094c2776a160caa8)`(const uint64_t & _val)` 

Constructor to double object from uint64 value.

Constructor to double object from uint64 value 
#### Parameters
* `_val` data

#### `public inline uint64_t `[`value`](#classeosio_1_1real_1a2ac76513d4a474fde9ae10f4c4b06af2)`() const` 

#### `public `[`real`](#classeosio_1_1real)` `[`operator+`](#group__real_1ga68cd8e0f235479aba3ac8d2079172c25)`(const `[`real`](#classeosio_1_1real)` & rhs) const` 

Add two real variables.

Add two real variables 
#### Parameters
* `rhs` double variable to be added with this 

#### Returns
the sum of this and rhs

#### `public `[`real`](#classeosio_1_1real)` `[`operator*`](#group__real_1ga6c5c07225c48b3dce21538f62d7be277)`(const `[`real`](#classeosio_1_1real)` & rhs) const` 

Multiply two real variables.

Multiply two real variables 
#### Parameters
* `rhs` double variable to be multiplied with this 

#### Returns
the result after multiplication

#### `public `[`real`](#classeosio_1_1real)` `[`operator/`](#group__real_1ga064fdac1b4799429680ff50ebf690d38)`(const `[`real`](#classeosio_1_1real)` & rhs) const` 

Division between two real variables.

Division between two real variables 
#### Parameters
* `rhs` double variable to be multiplied with this 

#### Returns
the result after division

