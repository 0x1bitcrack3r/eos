# group `transactioncapi` 

Define API for sending transactions.

## Summary

 Members                        | Descriptions                                
--------------------------------|---------------------------------------------
`public void `[`send_deferred`](#group__transactioncapi_1gaa7c68af746c8bd721d7c0817d6904a76)`(const uint128_t & sender_id,`[`account_name`](#group__types_1ga3b44deb4b3b8d6ebab339d1263692117)` payer,const char * serialized_transaction,size_t size)`            | 
`public void `[`cancel_deferred`](#group__transactioncapi_1ga040f3e33d271531da96e0f5244d1a365)`(const uint128_t & sender_id)`            | 
`public size_t `[`read_transaction`](#group__transactioncapi_1ga73fa4253ae0aec55399c26b740223bc6)`(char * buffer,size_t size)`            | access a copy of the currently executing transaction
`public size_t `[`transaction_size`](#group__transactioncapi_1gadfcd2e00f00461eac891ee8433508609)`()`            | get the size of the currently executing transaction
`public int `[`tapos_block_num`](#group__transactioncapi_1gac0b858a766ca73c6415bdb799d6ef45a)`()`            | get the block number used for TAPOS on the currently executing transaction
`public int `[`tapos_block_prefix`](#group__transactioncapi_1gaef5458ccfe8ca5d6b273e35d04c56371)`()`            | get the block prefix used for TAPOS on the currently executing transaction
`public `[`time`](#group__types_1ga44479e2657d126b44ca53d30c3e670d8)` `[`expiration`](#group__transactioncapi_1ga284f37e545cbb7f847f3ab86f50feb1d)`()`            | get the expiration of the currently executing transaction
`public int `[`get_action`](#group__transactioncapi_1gaf1fe78f3caf24010302e5cac1edad61d)`(uint32_t type,uint32_t index,char * buff,size_t size)`            | Retrieve the indicated action from the active transaction. 
`public int `[`get_context_free_data`](#group__transactioncapi_1gad0f4f1bd76077b3ee4289aadfb84c2b2)`(uint32_t index,char * buff,size_t size)`            | Retrieve the signed_transaction.context_free_data[index]. 
`public void `[`check_auth`](#group__transactioncapi_1ga4eb270c6316a15e6f579b4b448bc8a74)`(const char * serialized_transaction,size_t size,const char * permissions,size_t psize)`            | Check that prodived authorizations is enough to execute the transaction

## Members

#### `public void `[`send_deferred`](#group__transactioncapi_1gaa7c68af746c8bd721d7c0817d6904a76)`(const uint128_t & sender_id,`[`account_name`](#group__types_1ga3b44deb4b3b8d6ebab339d1263692117)` payer,const char * serialized_transaction,size_t size)` 

#### `public void `[`cancel_deferred`](#group__transactioncapi_1ga040f3e33d271531da96e0f5244d1a365)`(const uint128_t & sender_id)` 

#### `public size_t `[`read_transaction`](#group__transactioncapi_1ga73fa4253ae0aec55399c26b740223bc6)`(char * buffer,size_t size)` 

access a copy of the currently executing transaction

#### Parameters
* `buffer` - a buffer to write the current transaction to 

* `size` - the size of the buffer, 0 to return required size 

#### Returns
the size of the transaction written to the buffer, or number of bytes that can be copied if size==0 passed

#### `public size_t `[`transaction_size`](#group__transactioncapi_1gadfcd2e00f00461eac891ee8433508609)`()` 

get the size of the currently executing transaction

#### `public int `[`tapos_block_num`](#group__transactioncapi_1gac0b858a766ca73c6415bdb799d6ef45a)`()` 

get the block number used for TAPOS on the currently executing transaction

#### `public int `[`tapos_block_prefix`](#group__transactioncapi_1gaef5458ccfe8ca5d6b273e35d04c56371)`()` 

get the block prefix used for TAPOS on the currently executing transaction

#### `public `[`time`](#group__types_1ga44479e2657d126b44ca53d30c3e670d8)` `[`expiration`](#group__transactioncapi_1ga284f37e545cbb7f847f3ab86f50feb1d)`()` 

get the expiration of the currently executing transaction

#### `public int `[`get_action`](#group__transactioncapi_1gaf1fe78f3caf24010302e5cac1edad61d)`(uint32_t type,uint32_t index,char * buff,size_t size)` 

Retrieve the indicated action from the active transaction. 
#### Parameters
* `type` - 0 for context free action, 1 for action 

* `index` - the index of the requested action 

* `buff` - output packed buff of the action 

* `size` - amount of buff read, pass 0 to have size returned 

#### Returns
the size of the action, -1 on failure

#### `public int `[`get_context_free_data`](#group__transactioncapi_1gad0f4f1bd76077b3ee4289aadfb84c2b2)`(uint32_t index,char * buff,size_t size)` 

Retrieve the signed_transaction.context_free_data[index]. 
#### Parameters
* `index` - the index of the context_free_data entry to retrieve 

* `buff` - output buff of the context_free_data entry 

* `size` - amount of context_free_data[index] to retrieve into buff, 0 to report required size 

#### Returns
size copied, or context_free_data[index].size() if 0 passed for size, or -1 if index not valid

#### `public void `[`check_auth`](#group__transactioncapi_1ga4eb270c6316a15e6f579b4b448bc8a74)`(const char * serialized_transaction,size_t size,const char * permissions,size_t psize)` 

Check that prodived authorizations is enough to execute the transaction

